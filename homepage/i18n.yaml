apiVersion: v1
kind: ConfigMap
metadata:
  name: i18n-config
data:
  config.yaml: |
    mongodb:
      uri: "mongodb://homepage-i18n:password@mongodb-cluster-0.mongodb-cluster-svc.mongodb-cluster.svc.cluster.local:27017,mongodb-cluster-1.mongodb-cluster-svc.mongodb-cluster.local:27017,mongodb-cluster-2.mongodb-cluster-svc.mongodb-cluster.svc.cluster.local:27017"
      database: "i18n"
    token:
      publicKeyPath: "public_key.pem"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: i18n-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: i18n

  template:
    metadata:
      labels:
        app: i18n

    spec:
      containers:
        - name: i18n
          image: docker-registry.docker-registry.svc.cluster.local:5000/homapage-i18n:f6954c7
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 5m
              memory: 40Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: public-key-volume
              mountPath: /app/public_key.pem
              subPath: public_key.pem
              readOnly: true
            - name: config-volume
              mountPath: /app/config.yaml
              subPath: config.yaml

      volumes:
        - name: config-volume
          configMap:
            name: i18n-config
        - name: public-key-volume
          secret:
            secretName: public-key
            items:
              - key: public_key.pem
                path: public_key.pem
      imagePullSecrets:
        - name: gcp-artifact-registry
---

apiVersion: v1
kind: Service
metadata:
  name: i18n-service
spec:
  selector:
    app: i18n
  ports:
    - name: http-port
      port: 80
      protocol: TCP
      targetPort: 8080

